// Package delivery_sdk provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.11.1-0.20220609223533-7da811e1cf30 DO NOT EDIT.
package delivery_sdk

import (
	"encoding/json"
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for CourierState.
const (
	AnalyzingDeliveryOffer CourierState = "analyzing-delivery-offer"
	EnRouteToDropOff       CourierState = "en-route-to-drop-off"
	EnRouteToPickUp        CourierState = "en-route-to-pick-up"
	PlanningDropOffRoute   CourierState = "planning-drop-off-route"
	PlanningPickUpRoute    CourierState = "planning-pick-up-route"
	Unspecified            CourierState = "unspecified"
	WaitingForDropOff      CourierState = "waiting-for-drop-off"
	WaitingForPickUp       CourierState = "waiting-for-pick-up"
	WaitingToHandOver      CourierState = "waiting-to-hand-over"
)

// Defines values for CourierType.
const (
	Conventional CourierType = "conventional"
	Robot        CourierType = "robot"
)

// Defines values for CourierEventKind.
const (
	CourierAbortedDelivery            CourierEventKind = "courier-aborted-delivery"
	CourierAcceptedDeliveryOffer      CourierEventKind = "courier-accepted-delivery-offer"
	CourierArrivedAtDropOff           CourierEventKind = "courier-arrived-at-drop-off"
	CourierArrivedAtPickUp            CourierEventKind = "courier-arrived-at-pick-up"
	CourierDelegatedActiveDelivery    CourierEventKind = "courier-delegated-active-delivery"
	CourierDroppedOffPackage          CourierEventKind = "courier-dropped-off-package"
	CourierHandedOverPackage          CourierEventKind = "courier-handed-over-package"
	CourierLeftForDropOff             CourierEventKind = "courier-left-for-drop-off"
	CourierLeftForPickUp              CourierEventKind = "courier-left-for-pick-up"
	CourierPickedUpPackage            CourierEventKind = "courier-picked-up-package"
	CourierPositionChanged            CourierEventKind = "courier-position-changed"
	CourierPreparedToHandOver         CourierEventKind = "courier-prepared-to-hand-over"
	CourierReceivedDeliveryOffer      CourierEventKind = "courier-received-delivery-offer"
	CourierRejectedDeliveryOffer      CourierEventKind = "courier-rejected-delivery-offer"
	CourierStartedAcceptingDeliveries CourierEventKind = "courier-started-accepting-deliveries"
	CourierStoppedAcceptingDeliveries CourierEventKind = "courier-stopped-accepting-deliveries"
)

// Defines values for DeliveryJobStage.
const (
	DeliveryJobStageCourierAssignment DeliveryJobStage = "courier-assignment"
	DeliveryJobStageDeliveryCanceled  DeliveryJobStage = "delivery-canceled"
	DeliveryJobStageDeliveryCompleted DeliveryJobStage = "delivery-completed"
	DeliveryJobStageDropOff           DeliveryJobStage = "drop-off"
	DeliveryJobStagePickUp            DeliveryJobStage = "pick-up"
)

// Defines values for DeliveryJobEventKind.
const (
	DeliveryJobEventKindDeliveryCanceled                  DeliveryJobEventKind = "delivery-canceled"
	DeliveryJobEventKindDeliveryCompleted                 DeliveryJobEventKind = "delivery-completed"
	DeliveryJobEventKindDeliveryHandedOver                DeliveryJobEventKind = "delivery-handed-over"
	DeliveryJobEventKindDeliveryJobAcceptedByNextCourier  DeliveryJobEventKind = "delivery-job-accepted-by-next-courier"
	DeliveryJobEventKindDeliveryJobAssigned               DeliveryJobEventKind = "delivery-job-assigned"
	DeliveryJobEventKindDeliveryJobCreated                DeliveryJobEventKind = "delivery-job-created"
	DeliveryJobEventKindDeliveryJobDelegatedToNextCourier DeliveryJobEventKind = "delivery-job-delegated-to-next-courier"
	DeliveryJobEventKindDeliveryJobOfferedToCourier       DeliveryJobEventKind = "delivery-job-offered-to-courier"
	DeliveryJobEventKindDeliveryJobOfferedToNextCourier   DeliveryJobEventKind = "delivery-job-offered-to-next-courier"
	DeliveryJobEventKindDeliveryJobRejectedByCourier      DeliveryJobEventKind = "delivery-job-rejected-by-courier"
	DeliveryJobEventKindDeliveryJobRejectedByNextCourier  DeliveryJobEventKind = "delivery-job-rejected-by-next-courier"
	DeliveryJobEventKindDeliveryJobUnassigned             DeliveryJobEventKind = "delivery-job-unassigned"
	DeliveryJobEventKindDeliveryPickedUp                  DeliveryJobEventKind = "delivery-picked-up"
	DeliveryJobEventKindReceivedNewCourierPosition        DeliveryJobEventKind = "received-new-courier-position"
	DeliveryJobEventKindUnassignedNextCourier             DeliveryJobEventKind = "unassigned-next-courier"
)

// Defines values for DeliveryOrderStatus.
const (
	OrderAccepted DeliveryOrderStatus = "order-accepted"
	OrderCanceled DeliveryOrderStatus = "order-canceled"
	OrderReceived DeliveryOrderStatus = "order-received"
	OrderRejected DeliveryOrderStatus = "order-rejected"
)

// Defines values for DeliveryOrderRejectionReason.
const (
	DeliveryDistanceTooLarge      DeliveryOrderRejectionReason = "delivery-distance-too-large"
	NoCapacity                    DeliveryOrderRejectionReason = "no-capacity"
	OutsideDeliveryArea           DeliveryOrderRejectionReason = "outside-delivery-area"
	ScheduledDeliveryNotSupported DeliveryOrderRejectionReason = "scheduled-delivery-not-supported"
)

// Defines values for InvalidClientActionErrorReason.
const (
	DeactivatedClient InvalidClientActionErrorReason = "deactivated-client"
	InvalidArgument   InvalidClientActionErrorReason = "invalid-argument"
)

// AddressDescription defines model for AddressDescription.
type AddressDescription struct {
	AddressLine1      string  `json:"addressLine1"`
	AddressLine2      *string `json:"addressLine2,omitempty"`
	Country           string  `json:"country"`
	EstablishmentName *string `json:"establishmentName,omitempty"`
	Locality          string  `json:"locality"`
	PostalCode        string  `json:"postalCode"`
	State             string  `json:"state"`
}

// CompleteAddress defines model for CompleteAddress.
type CompleteAddress struct {
	AddressDescription AddressDescription `json:"addressDescription"`
	GeocodedAddress    GeocodedAddress    `json:"geocodedAddress"`
}

// Courier defines model for Courier.
type Courier struct {
	ActiveDeliveryUuid    openapi_types.UUID `json:"activeDeliveryUuid"`
	IsAcceptingDeliveries bool               `json:"isAcceptingDeliveries"`
	LastKnownPosition     *GeocodeLogEntry   `json:"lastKnownPosition,omitempty"`
	Name                  string             `json:"name"`
	State                 CourierState       `json:"state"`
	Type                  CourierType        `json:"type"`
	Uuid                  openapi_types.UUID `json:"uuid"`
}

// CourierState defines model for Courier.State.
type CourierState string

// CourierType defines model for Courier.Type.
type CourierType string

// CourierEvent defines model for CourierEvent.
type CourierEvent struct {
	Courier       Courier            `json:"courier"`
	CourierBefore *Courier           `json:"courierBefore,omitempty"`
	Kind          CourierEventKind   `json:"kind"`
	ProducedAt    time.Time          `json:"producedAt"`
	Uuid          openapi_types.UUID `json:"uuid"`
}

// CourierEventKind defines model for CourierEvent.Kind.
type CourierEventKind string

// CreateOrderClientErrorResponse defines model for CreateOrderClientErrorResponse.
type CreateOrderClientErrorResponse struct {
	union json.RawMessage
}

// DeliveryCharges defines model for DeliveryCharges.
type DeliveryCharges struct {
	TotalInCents int32 `json:"totalInCents"`
}

// DeliveryJob defines model for DeliveryJob.
type DeliveryJob struct {
	CompletedAt        *time.Time          `json:"completedAt,omitempty"`
	CurrentCourierUUID *openapi_types.UUID `json:"currentCourierUUID,omitempty"`
	DeliveryCharges    DeliveryCharges     `json:"deliveryCharges"`
	DeliveryOrderUuid  openapi_types.UUID  `json:"deliveryOrderUuid"`
	DropOffService     DeliveryService     `json:"dropOffService"`
	NextCourierUUID    *openapi_types.UUID `json:"nextCourierUUID,omitempty"`
	PickUpService      DeliveryService     `json:"pickUpService"`
	Stage              DeliveryJobStage    `json:"stage"`
	Uuid               openapi_types.UUID  `json:"uuid"`
}

// DeliveryJobStage defines model for DeliveryJob.Stage.
type DeliveryJobStage string

// DeliveryJobEvent defines model for DeliveryJobEvent.
type DeliveryJobEvent struct {
	DeliveryJob       DeliveryJob          `json:"deliveryJob"`
	DeliveryJobBefore *DeliveryJob         `json:"deliveryJobBefore,omitempty"`
	Kind              DeliveryJobEventKind `json:"kind"`
	ProducedAt        time.Time            `json:"producedAt"`
	Uuid              openapi_types.UUID   `json:"uuid"`
}

// DeliveryJobEventKind defines model for DeliveryJobEvent.Kind.
type DeliveryJobEventKind string

// DeliveryOrder defines model for DeliveryOrder.
type DeliveryOrder struct {
	DeliveryCharges DeliveryCharges     `json:"deliveryCharges"`
	DropOff         DeliveryService     `json:"dropOff"`
	ExternalID      string              `json:"externalID"`
	IsMock          bool                `json:"isMock"`
	PickUp          DeliveryService     `json:"pickUp"`
	ReceivedAt      time.Time           `json:"receivedAt"`
	Receiver        DeliveryOrderParty  `json:"receiver"`
	Shipper         DeliveryOrderParty  `json:"shipper"`
	Status          DeliveryOrderStatus `json:"status"`
	Uuid            openapi_types.UUID  `json:"uuid"`
}

// DeliveryOrderStatus defines model for DeliveryOrder.Status.
type DeliveryOrderStatus string

// DeliveryOrderCreationRequest defines model for DeliveryOrderCreationRequest.
type DeliveryOrderCreationRequest struct {
	DropOffAddress     CompleteAddress    `json:"dropOffAddress"`
	DropOffDeadlineAt  *time.Time         `json:"dropOffDeadlineAt,omitempty"`
	DropOffNotes       *string            `json:"dropOffNotes,omitempty"`
	DropOffNotifyParty *NotifyParty       `json:"dropOffNotifyParty,omitempty"`
	ExternalID         string             `json:"externalID"`
	IsMock             *bool              `json:"isMock,omitempty"`
	PickUpAddress      CompleteAddress    `json:"pickUpAddress"`
	PickUpDeadlineAt   *time.Time         `json:"pickUpDeadlineAt,omitempty"`
	PickUpNotes        *string            `json:"pickUpNotes,omitempty"`
	PickUpNotifyParty  *NotifyParty       `json:"pickUpNotifyParty,omitempty"`
	Receiver           DeliveryOrderParty `json:"receiver"`
	Shipper            DeliveryOrderParty `json:"shipper"`
}

// DeliveryOrderParty defines model for DeliveryOrderParty.
type DeliveryOrderParty struct {
	Email       *string `json:"email,omitempty"`
	IsBusiness  bool    `json:"isBusiness"`
	Name        string  `json:"name"`
	PhoneNumber *string `json:"phoneNumber,omitempty"`
}

// DeliveryOrderQuote defines model for DeliveryOrderQuote.
type DeliveryOrderQuote struct {
	DeliveryCharges   DeliveryCharges    `json:"deliveryCharges"`
	DropOffAddress    CompleteAddress    `json:"dropOffAddress"`
	DropOffAfter      time.Time          `json:"dropOffAfter"`
	DropOffDeadlineAt time.Time          `json:"dropOffDeadlineAt"`
	GoodUntil         time.Time          `json:"goodUntil"`
	IsMock            bool               `json:"isMock"`
	PickUpAddress     CompleteAddress    `json:"pickUpAddress"`
	PickUpAfter       time.Time          `json:"pickUpAfter"`
	PickUpDeadlineAt  time.Time          `json:"pickUpDeadlineAt"`
	ReceivedAt        time.Time          `json:"receivedAt"`
	Uuid              openapi_types.UUID `json:"uuid"`
}

// DeliveryOrderQuoteRequest defines model for DeliveryOrderQuoteRequest.
type DeliveryOrderQuoteRequest struct {
	DropOffAddress GeocodedAddress `json:"dropOffAddress"`
	IsMock         *bool           `json:"isMock,omitempty"`
	PickUpAddress  GeocodedAddress `json:"pickUpAddress"`
}

// DeliveryOrderRejection defines model for DeliveryOrderRejection.
type DeliveryOrderRejection struct {
	Message string                       `json:"message"`
	Reason  DeliveryOrderRejectionReason `json:"reason"`
}

// DeliveryOrderRejectionReason defines model for DeliveryOrderRejection.Reason.
type DeliveryOrderRejectionReason string

// DeliveryService defines model for DeliveryService.
type DeliveryService struct {
	Address                CompleteAddress `json:"address"`
	DeadlineAt             time.Time       `json:"deadlineAt"`
	EstimatedAt            time.Time       `json:"estimatedAt"`
	IsSelfServiceAvailable bool            `json:"isSelfServiceAvailable"`
	Notes                  string          `json:"notes"`
	NotifyParty            NotifyParty     `json:"notifyParty"`
	ServiceAfter           time.Time       `json:"serviceAfter"`
}

// GeocodeLogEntry defines model for GeocodeLogEntry.
type GeocodeLogEntry struct {
	GeocodedAddress GeocodedAddress `json:"geocodedAddress"`
	RecordedAt      time.Time       `json:"recordedAt"`
}

// GeocodedAddress defines model for GeocodedAddress.
type GeocodedAddress struct {
	GooglePlaceID *string `json:"googlePlaceID,omitempty"`
	Lat           float64 `json:"lat"`
	Lng           float64 `json:"lng"`
}

// InvalidClientActionError defines model for InvalidClientActionError.
type InvalidClientActionError struct {
	Message string                         `json:"message"`
	Reason  InvalidClientActionErrorReason `json:"reason"`
}

// InvalidClientActionErrorReason defines model for InvalidClientActionError.Reason.
type InvalidClientActionErrorReason string

// NotifyParty defines model for NotifyParty.
type NotifyParty struct {
	Email       *string `json:"email,omitempty"`
	Name        *string `json:"name,omitempty"`
	PhoneNumber *string `json:"phoneNumber,omitempty"`
}

// RequestQuoteClientErrorResponse defines model for RequestQuoteClientErrorResponse.
type RequestQuoteClientErrorResponse struct {
	union json.RawMessage
}

// Webhook defines model for Webhook.
type Webhook struct {
	ApiKey string `json:"api_key"`
	Url    string `json:"url"`
}

// Webhooks defines model for Webhooks.
type Webhooks struct {
	CourierEvents     Webhook `json:"courierEvents"`
	DeliveryJobEvents Webhook `json:"deliveryJobEvents"`
}

// PostOrderDroppedOffJSONBody defines parameters for PostOrderDroppedOff.
type PostOrderDroppedOffJSONBody interface{}

// PostOrderPickedUpJSONBody defines parameters for PostOrderPickedUp.
type PostOrderPickedUpJSONBody interface{}

// CreateOpenRobotLidCommandJSONBody defines parameters for CreateOpenRobotLidCommand.
type CreateOpenRobotLidCommandJSONBody interface{}

// CreateOrderJSONBody defines parameters for CreateOrder.
type CreateOrderJSONBody = DeliveryOrderCreationRequest

// RequestQuoteJSONBody defines parameters for RequestQuote.
type RequestQuoteJSONBody = DeliveryOrderQuoteRequest

// SetWebhooksJSONBody defines parameters for SetWebhooks.
type SetWebhooksJSONBody = Webhooks

// PostOrderDroppedOffJSONRequestBody defines body for PostOrderDroppedOff for application/json ContentType.
type PostOrderDroppedOffJSONRequestBody PostOrderDroppedOffJSONBody

// PostOrderPickedUpJSONRequestBody defines body for PostOrderPickedUp for application/json ContentType.
type PostOrderPickedUpJSONRequestBody PostOrderPickedUpJSONBody

// CreateOpenRobotLidCommandJSONRequestBody defines body for CreateOpenRobotLidCommand for application/json ContentType.
type CreateOpenRobotLidCommandJSONRequestBody CreateOpenRobotLidCommandJSONBody

// CreateOrderJSONRequestBody defines body for CreateOrder for application/json ContentType.
type CreateOrderJSONRequestBody = CreateOrderJSONBody

// RequestQuoteJSONRequestBody defines body for RequestQuote for application/json ContentType.
type RequestQuoteJSONRequestBody = RequestQuoteJSONBody

// SetWebhooksJSONRequestBody defines body for SetWebhooks for application/json ContentType.
type SetWebhooksJSONRequestBody = SetWebhooksJSONBody

func (t CreateOrderClientErrorResponse) AsDeliveryOrderRejection() (DeliveryOrderRejection, error) {
	var body DeliveryOrderRejection
	err := json.Unmarshal(t.union, &body)
	return body, err
}

func (t *CreateOrderClientErrorResponse) FromDeliveryOrderRejection(v DeliveryOrderRejection) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

func (t CreateOrderClientErrorResponse) AsInvalidClientActionError() (InvalidClientActionError, error) {
	var body InvalidClientActionError
	err := json.Unmarshal(t.union, &body)
	return body, err
}

func (t *CreateOrderClientErrorResponse) FromInvalidClientActionError(v InvalidClientActionError) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

func (t CreateOrderClientErrorResponse) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *CreateOrderClientErrorResponse) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

func (t RequestQuoteClientErrorResponse) AsDeliveryOrderRejection() (DeliveryOrderRejection, error) {
	var body DeliveryOrderRejection
	err := json.Unmarshal(t.union, &body)
	return body, err
}

func (t *RequestQuoteClientErrorResponse) FromDeliveryOrderRejection(v DeliveryOrderRejection) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

func (t RequestQuoteClientErrorResponse) AsInvalidClientActionError() (InvalidClientActionError, error) {
	var body InvalidClientActionError
	err := json.Unmarshal(t.union, &body)
	return body, err
}

func (t *RequestQuoteClientErrorResponse) FromInvalidClientActionError(v InvalidClientActionError) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

func (t RequestQuoteClientErrorResponse) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *RequestQuoteClientErrorResponse) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}
